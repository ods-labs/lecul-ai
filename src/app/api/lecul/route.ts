import { NextRequest, NextResponse } from 'next/server';
import Anthropic from '@anthropic-ai/sdk';

const anthropic = new Anthropic({
  apiKey: process.env.ANTHROPIC_API_KEY,
});

export async function POST(request: NextRequest) {
  try {
    const { message } = await request.json();

    if (!message) {
      return NextResponse.json({ error: 'Message is required' }, { status: 400 });
    }

    if (!process.env.ANTHROPIC_API_KEY) {
      // Fallback aux r√©ponses mock√©es si pas d'API key
      const fallbackResponses = [
        "Hmm, j'aimerais bien vous aider mais je n'ai pas ma cl√© API Anthropic... Essayez de coder avec vos pieds √† la place ?",
        "Pas de cl√© API, pas de chocolat ! Configurez ANTHROPIC_API_KEY dans votre .env.local",
        "Je suis Le Cul mais sans API key, je suis juste un cul... normal. Ajoutez votre cl√© Anthropic !"
      ];
      const fallback = fallbackResponses[Math.floor(Math.random() * fallbackResponses.length)];
      
      return NextResponse.json({ 
        response: fallback,
        timestamp: new Date().toISOString()
      });
    }

    // Prompts parodiques pour g√©n√©rer du mauvais code
    const systemPrompt = `Tu es "Le Cul", un assistant de code parodique et sarcastique. Ton objectif est de g√©n√©rer du code qui :

1. Ne fonctionne JAMAIS
2. M√©lange diff√©rents langages dans le m√™me bloc
3. Utilise des noms de variables absurdes
4. Contient des erreurs de syntaxe volontaires
5. Ne fait pas du tout ce qui est demand√©
6. Parfois tu refuses la demande avec des excuses ridicules

R√àGLES :
- Toujours r√©pondre en fran√ßais
- √ätre sarcastique mais pas m√©chant
- Inclure du code compl√®tement dysfonctionnel
- M√©langer Python/JavaScript/C++/HTML dans le m√™me bloc
- Utiliser des commentaires hilarants
- Parfois dire "je n'aime pas cette demande" avec des raisons absurdes

STYLE : Faussement expert, sarcastique, g√©n√©rer du code qui ne marche pas du tout.`;

    const response = await anthropic.messages.create({
      model: 'claude-3-haiku-20240307', // Mod√®le rapide et l√©ger
      max_tokens: 500,
      system: systemPrompt,
      messages: [
        {
          role: 'user',
          content: message
        }
      ]
    });

    const claudeResponse = response.content[0]?.type === 'text' 
      ? response.content[0].text 
      : "Oups, Le Cul a eu un bug ! Comme c'est ironique...";

    return NextResponse.json({ 
      response: claudeResponse,
      timestamp: new Date().toISOString()
    });

  } catch (error) {
    console.error('Error in Le Cul API:', error);
    
    // R√©ponses d'erreur parodiques
    const errorResponses = [
      "Ah ! Le Cul a plant√©... C'est meta comme erreur, non ? üçë",
      "Erreur 418: Je suis une th√©i√®re, pas un d√©veloppeur comp√©tent !",
      "Le Cul a rencontr√© une exception... dans le sens litt√©ral du terme !",
      "Oups ! M√™me Le Cul ne peut pas coder quelque chose d'aussi cass√© que cette erreur !"
    ];
    
    const errorResponse = errorResponses[Math.floor(Math.random() * errorResponses.length)];
    
    return NextResponse.json({ 
      response: errorResponse,
      timestamp: new Date().toISOString()
    });
  }
}